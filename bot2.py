import telebot
from pythonping import ping
import os, wikipedia, re
from telebot import types
import paramiko
import schedule

import requests
#from aiogram.types import ReplyKeyboardRemove,ReplyKeyboardMarkup, KeyboardButton,InlineKeyboardMarkup, InlineKeyboardButton

#!!!! –ù–µ –∑–∞–±—É–¥—å –ø–æ–º–µ–Ω—è—Ç—å –ø–∞—Ä–æ–ª–∏ –Ω–∞ —Å–∫—Ä–∏–ø—Ç–∞—Ö!!!

passwd = "Jac" #–ü–∞—Ä–æ–ª—å –¥–ª—è —Å–∫—Ä–∏–ø—Ç–æ–≤!!!

#–ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å SSH
client = paramiko.SSHClient()
client.set_missing_host_key_policy(paramiko.AutoAddPolicy())

#from ping3 import ping
bot = telebot.TeleBot('5388668812:AAFiSusMexQ5fO9mkxpUjp20uje-qGJp4ws') #–û—Å–Ω–æ–≤–Ω–æ–π –ë–û–¢

#bot = telebot.TeleBot('5800064216:AAFWd0BnsgM9MH94ppPZKU9plisU0L9K_2k') #–ó–∞–ø–∞—Å–Ω–æ–π –±–æ—Ç

#–í–µ—Ä—Ö–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–≤—ã–±–æ—Ä —Ä–∞–∑–¥–µ–ª–∞)

keyboard_up = types.InlineKeyboardMarkup()
key_1c = types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å/–∑–∞–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø –≤ 1–°', callback_data='1c_rule')
key_mikrot = types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å/–∑–∞–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø –≤ –ú–∏–∫—Ä–æ—Ç–∏–∫', callback_data='mikrot_rule')
keyboard_up.add(key_1c)
keyboard_up.add(key_mikrot)

#–û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∞–≤–∏–ª 1–°

keyboard_1c = types.InlineKeyboardMarkup()
key_sql_open = types.InlineKeyboardButton(text='\U0001F7E2 –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∞–≤–∏–ª–æ 1C', callback_data='sql_open')
key_sql_close = types.InlineKeyboardButton(text='\U000026D4 –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∞–≤–∏–ª–æ 1C', callback_data='sql_close')
keyboard_1c.add(key_sql_open)
keyboard_1c.add(key_sql_close)

#–ü—Ä–∞–≤–∏–ª–∞ –ú–∏–∫—Ä–æ—Ç–∏–∫–∞

keyboard_mikrot = types.InlineKeyboardMarkup()
key_micr_open1 = types.InlineKeyboardButton(text='\U0001F7E2 –û—Ç–∫—Ä—ã—Ç—å –ú–∏–∫—Ä–æ—Ç–∏–∫ —Å–Ω–∞—Ä—É–∂–∏', callback_data='micr_open')
key_micr_close1 = types.InlineKeyboardButton(text='\U000026D4 –ó–∞–∫—Ä—ã—Ç—å –ú–∏–∫—Ä–æ—Ç–∏–∫ —Å–Ω–∞—Ä—É–∂–∏', callback_data='micr_close')
keyboard_mikrot.add(key_micr_open1)
keyboard_mikrot.add(key_micr_close1)

keyboard_ping = types.InlineKeyboardMarkup()
key_ping_sql = types.InlineKeyboardButton(text='\U0001F7E2 –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ 1—Å', callback_data='ping_sql')
key_ping_term = types.InlineKeyboardButton(text='\U000026D4 –ü—Ä–æ–≤–µ—Ä–∫–∞ –¢–µ—Ä–º–∏–Ω–∞–ª–∞', callback_data='ping_term')
key_ping_host_sql = types.InlineKeyboardButton(text='\U000026D4 –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ö–æ—Å—Ç–∞ SQL', callback_data='ping_host_sql')
key_ping_host_all = types.InlineKeyboardButton(text='\U000026D4 –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—â–µ–≥–æ —Ö–æ—Å—Ç–∞', callback_data='ping_host_all')
key_ping_all = types.InlineKeyboardButton(text='\U000026D4 –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤', callback_data='ping_all')
keyboard_ping.add(key_ping_sql)
keyboard_ping.add(key_ping_term)
keyboard_ping.add(key_ping_host_sql)
keyboard_ping.add(key_ping_host_all)
keyboard_ping.add(key_ping_all)

# keyboard = types.InlineKeyboardMarkup()
# key_start = types.InlineKeyboardButton(text='\U0001F609 –í–∏–∫–∏–ø–µ–¥–∏—è \U0001F915', callback_data='startt')
# key_spisok_wr = types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫', callback_data='spisok_wr')
# key_spisok_r = types.InlineKeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫', callback_data='spisok_r')
# key_spisok_del = types.InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–æ—á–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞', callback_data='spisok_del')
# key_spisok_clear = types.InlineKeyboardButton(text='–û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫', callback_data='spisok_clear')
# key_sql_open = types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∞–≤–∏–ª–æ 1C', callback_data='sql_open')
# key_sql_close = types.InlineKeyboardButton(text='–ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∞–≤–∏–ª–æ 1C', callback_data='sql_close')
# key_micr_open = types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å –ú–∏–∫—Ä–æ—Ç–∏–∫ —Å–Ω–∞—Ä—É–∂–∏', callback_data='micr_open')
# key_micr_close = types.InlineKeyboardButton(text='–ó–∞–∫—Ä—ã—Ç—å –ú–∏–∫—Ä–æ—Ç–∏–∫ —Å–Ω–∞—Ä—É–∂–∏', callback_data='micr_close')
#
# #keyboard.add(key_start)
# #keyboard.add(key_spisok_wr,key_spisok_r)
# #keyboard.add(key_spisok_del)
# #keyboard.add(key_spisok_clear)
# keyboard.add(key_sql_open)
# keyboard.add(key_sql_close)
# keyboard.add(key_micr_open)
# keyboard.add(key_micr_close)
# #wikipedia.set_lang("ru")

#–ö–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
# button_hi = KeyboardButton('–ü—Ä–∏–≤–µ—Ç! üëã')
#
# greet_kb = ReplyKeyboardMarkup()
# greet_kb.add(button_hi)


keyboard1 = types.InlineKeyboardMarkup()
key_pc_back_open = types.InlineKeyboardButton(text='\U0001F7E2 –û—Ç–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø –Ω–∞ –ü–ö –±–µ–∫–∞–ø (49900)', callback_data='pc_back_open')
key_host_basic_open = types.InlineKeyboardButton(text='\U0001F7E2 –û—Ç–∫—Ä—ã—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Ö–æ—Å—Ç (49901)', callback_data='host_basic_open')
key_pc_back_close = types.InlineKeyboardButton(text='\U000026D4 –ó–∞–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø –Ω–∞ –ü–ö –±–µ–∫–∞–ø (49900)', callback_data='pc_back_close')
key_host_basic_close = types.InlineKeyboardButton(text='\U000026D4 –ó–∞–∫—Ä—ã—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Ö–æ—Å—Ç (49901)', callback_data='host_basic_close')
key_host_mik_reboot = types.InlineKeyboardButton(text='\U0001F6E0 –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –º–∏–∫—Ä–æ—Ç–∏–∫ –≤ –≥–æ—Å—Ç–∏–Ω–∏—Ü–µ', callback_data='host_mik_reboot')
key_aglos_mikr_reboot = types.InlineKeyboardButton(text='\U00002692 –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –º–∏–∫—Ä–æ—Ç–∏–∫ –≤ –∞–≥–ª–æ—Å', callback_data='aglos_mikr_reboot')
key_host_mik_reboot = types.InlineKeyboardButton(text='\U0001F6E0 –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –º–∏–∫—Ä–æ—Ç–∏–∫ –≤ –≥–æ—Å—Ç–∏–Ω–∏—Ü–µ', callback_data='host_mik_reboot')
key_aglos_mikr_reboot = types.InlineKeyboardButton(text='\U00002692 –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –º–∏–∫—Ä–æ—Ç–∏–∫ –≤ –∞–≥–ª–æ—Å', callback_data='aglos_mikr_reboot')
key_aglos_vpn_disable = types.InlineKeyboardButton(text='\U0000274C –í—ã–∫–ª—é—á–∏—Ç—å OpenVpn –ê–≥–ª–æ—Å', callback_data='aglos_vpn_disable')
key_aglos_vpn_enable = types.InlineKeyboardButton(text='\U00002714 –í–∫–ª—é—á–∏—Ç—å OpenVPN –∞–≥–ª–æ—Å', callback_data='aglos_vpn_enable')


keyboard1.add(key_pc_back_open)
keyboard1.add(key_pc_back_close)
keyboard1.add(key_host_basic_open)
keyboard1.add(key_host_basic_close)
keyboard1.add(key_host_mik_reboot)
keyboard1.add(key_aglos_mikr_reboot)
keyboard1.add(key_aglos_vpn_disable)
keyboard1.add(key_aglos_vpn_enable)

#–û—á–∏—Å—Ç–∫–∞ –ê–¥—Ä–µ—Å –ª–∏—Å—Ç–æ–≤
keyboard2 = types.InlineKeyboardMarkup()
key_clear_block = types.InlineKeyboardButton(text='\U0001F7E2 –û—á–∏—Å—Ç–∏—Ç—å –ª–∏—Å—Ç Block1', callback_data='clear_block')
key_clear_brute = types.InlineKeyboardButton(text='\U0001F7E2 –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –ª–∏—Å—Ç—ã rdp_brute', callback_data='clear_brute')

keyboard2.add(key_clear_block)
keyboard2.add(key_clear_brute)


@bot.message_handler(commands=['start'])
def start(message):
    adm = [32949476] #–î–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if message.chat.id not in adm:
        bot.send_message(message.chat.id, '–ù–µ—Ñ–∏–∫ —Ç—É—Ç –ª–∞–∑–∏—Ç—å! –£—Ö–æ–¥–∏—Ç–µ!')
    else:
        bot.send_message(message.chat.id, "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å:", reply_markup=keyboard_up)


@bot.message_handler(commands=['mikrotik'])
def start(message):
    adm = [32949476]  # –î–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if message.chat.id not in adm:
        bot.send_message(message.chat.id, '–ù–µ—Ñ–∏–∫ —Ç—É—Ç –ª–∞–∑–∏—Ç—å! –£—Ö–æ–¥–∏—Ç–µ!')
    else:
        bot.send_message(message.chat.id, "–ü—Ä–∞–≤–∏–ª–∞ –ú–∏–∫—Ä–æ—Ç–∏–∫–∞:", reply_markup=keyboard1)

@bot.message_handler(commands=['ping'])
def start(message):
    adm = [32949476]  # –î–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if message.chat.id not in adm:
        bot.send_message(message.chat.id, '–ù–µ—Ñ–∏–∫ —Ç—É—Ç –ª–∞–∑–∏—Ç—å! –£—Ö–æ–¥–∏—Ç–µ!')
    else:
        bot.send_message(message.chat.id, "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∏–Ω–≥–∞:", reply_markup=keyboard_ping)

#–û—á–∏—Å—Ç–∫–∞ –ª–∏—Å—Ç–∞ Block1
@bot.message_handler(commands=['lists'])
def start(message):
    adm = [32949476] #–î–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if message.chat.id not in adm:
        bot.send_message(message.chat.id, '–ù–µ—Ñ–∏–∫ —Ç—É—Ç –ª–∞–∑–∏—Ç—å! –£—Ö–æ–¥–∏—Ç–µ!')
    else:
        bot.send_message(message.chat.id, "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å:", reply_markup=keyboard2)


def info(message):
    print(message.text)
    bot.send_message(message.chat.id, getwiki(message.text))

@bot.callback_query_handler(func=lambda call: call.data =='1c_rule')
def spisok_del(call):
    if call.data == "1c_rule":
        bot.send_message(call.message.chat.id, "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å:", reply_markup=keyboard_1c)

@bot.callback_query_handler(func=lambda call: call.data =='mikrot_rule')
def spisok_del(call):
    if call.data == "mikrot_rule":
        bot.send_message(call.message.chat.id, "–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å:", reply_markup=keyboard_mikrot)

#–û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª–æ SQL

@bot.callback_query_handler(func=lambda call: call.data =='sql_open')#–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "sql_open": #–°—é–¥–∞ –≤–ø–∏—Å–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ SQL –∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–∞–≤–∏–ª–∞, —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
        client.connect(hostname='10.100.2.1', port=6666, username="bka", password=passwd, look_for_keys=False,
                       allow_agent=False)
        _stdin, _stdout, _stderr = client.exec_command('ip firewall nat enable numbers=5')
    bot.send_message(call.message.chat.id, '1C –¥–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã—Ç')

#–ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª–æ SQL

@bot.callback_query_handler(func=lambda call: call.data =='sql_close') #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "sql_close": #–°—é–¥–∞ –≤–ø–∏—Å–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ SQL –∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–∞–≤–∏–ª–∞, —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
        client.connect(hostname='10.100.2.1', port=6666, username="bka", password=passwd, look_for_keys=False,
                       allow_agent=False)
        _stdin, _stdout, _stderr = client.exec_command('ip firewall nat disable numbers=5')
    bot.send_message(call.message.chat.id, '1C –¥–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Ç')
#–û—Ç–∫—Ä—ã–∞–µ–º –º–∏–∫—Ä–æ—Ç —Å–Ω–∞—Ä—É–∂–∏

@bot.callback_query_handler(func=lambda call: call.data =='micr_open')   #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "micr_open": #–°—é–¥–∞ –≤–ø–∏—Å–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ SQL –∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–∞–≤–∏–ª–∞, —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
        client.connect(hostname='10.100.2.1', port=6666, username="bka", password=passwd, look_for_keys=False,
                       allow_agent=False)
        _stdin, _stdout, _stderr = client.exec_command('ip firewall filter disable numbers=2')
    bot.send_message(call.message.chat.id, '–ú–∏–∫—Ä–æ—Ç –æ—Ç–∫—Ä—ã—Ç —Å–Ω–∞—Ä—É–∂–∏!')

#–ó–∞–∫—Ä—ã–≤–∞–µ–º –ú–∏–∫—Ä–æ—Ç —Å–Ω–∞—Ä—É–∂–∏

@bot.callback_query_handler(func=lambda call: call.data =='micr_close')   #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "micr_close": #–°—é–¥–∞ –≤–ø–∏—Å–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ SQL –∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–∞–≤–∏–ª–∞, —Å–¥–µ–ª–∞—Ç—å –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
        #client.connect(hostname='192.168.1.34', port=2231, username="bka", password=passwd, look_for_keys=False, allow_agent=False)
        client.connect(hostname='10.100.2.1', port=6666, username="bka", password=passwd, look_for_keys=False, allow_agent=False)
        _stdin, _stdout, _stderr = client.exec_command('ip firewall filter enable numbers=2')
    bot.send_message(call.message.chat.id, '–ú–∏–∫—Ä–æ—Ç –∑–∞–∫—Ä—ã—Ç —Å–Ω–∞—Ä—É–∂–∏!')


#–û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–æ–º–ø –±–µ–∫–∞–ø–∞ —Å–Ω–∞—Ä—É–∂–∏

@bot.callback_query_handler(func=lambda call: call.data =='pc_back_open')   #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "pc_back_open":
        client.connect(hostname='10.100.2.1', port=6666, username="bka", password=passwd, look_for_keys=False,
                       allow_agent=False)
        _stdin, _stdout, _stderr = client.exec_command('ip firewall nat enable numbers=4')
    bot.send_message(call.message.chat.id, '–ü–ö –±–µ–∫–∞–ø–∞ –æ—Ç–∫—Ä—ã—Ç')

#–ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–æ–º–ø –±–µ–∫–∞–ø–∞ —Å–Ω–∞—Ä—É–∂–∏

@bot.callback_query_handler(func=lambda call: call.data =='pc_back_close') #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "pc_back_close":
        client.connect(hostname='10.100.2.1', port=6666, username="bka", password=passwd, look_for_keys=False,
                       allow_agent=False)
        _stdin, _stdout, _stderr = client.exec_command('ip firewall nat disable numbers=4')
    bot.send_message(call.message.chat.id, '–ü–ö –±–µ–∫–∞–ø–∞ –∑–∞–∫—Ä—ã—Ç')

#–û—Ç–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ö–æ—Å—Ç —Å–Ω–∞—Ä—É–∂–∏

@bot.callback_query_handler(func=lambda call: call.data =='host_basic_open')   #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "host_basic_open":
        client.connect(hostname='10.100.2.1', port=6666, username="bka", password=passwd, look_for_keys=False,
                       allow_agent=False)
        _stdin, _stdout, _stderr = client.exec_command('ip firewall nat enable numbers=6')
    bot.send_message(call.message.chat.id, '–•–æ—Å—Ç –æ—Ç–∫—Ä—ã—Ç')

#–ó–∞–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ö–æ—Å—Ç —Å–Ω–∞—Ä—É–∂–∏

@bot.callback_query_handler(func=lambda call: call.data =='host_basic_close') #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "host_basic_close":
        client.connect(hostname='10.100.2.1', port=6666, username="bka", password=passwd, look_for_keys=False,
                       allow_agent=False)
        _stdin, _stdout, _stderr = client.exec_command('ip firewall nat disable numbers=6')
    bot.send_message(call.message.chat.id, '–ü–ö –±–µ–∫–∞–ø–∞ –∑–∞–∫—Ä—ã—Ç')

#–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ú–∏–∫—Ä–æ—Ç–∏–∫–æ–≤
#–ì–æ—Å—Ç–∏–Ω–∏—Ü–∞
@bot.callback_query_handler(func=lambda call: call.data =='host_mik_reboot') #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "host_mik_reboot":
        client.connect(hostname='10.100.2.1', port=6666, username="bka", password=passwd, look_for_keys=False,
                       allow_agent=False)
        _stdin, _stdout, _stderr = client.exec_command('ip firewall nat disable numbers=6')
    bot.send_message(call.message.chat.id, 'Mikrotik –Ω–∞ —à–æ–ª–æ—Ö–æ–≤–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω')

#–ê–≥–ª–æ—Å
@bot.callback_query_handler(func=lambda call: call.data =='aglos_mikr_reboot') #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "aglos_mikr_reboot":
        client.connect(hostname='10.101.1.1', port=6666, username="bka", password=passwd, look_for_keys=False,
                       allow_agent=False)
        _stdin, _stdout, _stderr = client.exec_command('ip firewall nat disable numbers=6')
    bot.send_message(call.message.chat.id, 'Mikrotik –≤ –ê–≥–ª–æ—Å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω')

#–í—ã–∫–ª—é—á–∏—Ç—å/–í–∫–ª—é—á–∏—Ç—å openvpn
#/interface set [find comment="hotel"] disabled=yes
#/interface set [find comment="hotel"] disabled=no

@bot.callback_query_handler(func=lambda call: call.data =='aglos_vpn_disable') #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "aglos_vpn_disable":
        client.connect(hostname='94.181.59.14', port=6666, username="bka", password=passwd, look_for_keys=False,
                       allow_agent=False)
        _stdin, _stdout, _stderr = client.exec_command('interface set [find comment="hotel"] disabled=yes')
    bot.send_message(call.message.chat.id, 'OpenVPN –≤—ã–∫–ª—é—á–µ–Ω')

@bot.callback_query_handler(func=lambda call: call.data =='aglos_vpn_enable') #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    print('111')
    if call.data == "aglos_vpn_enable":
        print('222')
        client.connect(hostname='94.181.59.14', port=6666, username="bka", password=passwd, look_for_keys=False,
                       allow_agent=False)
        _stdin, _stdout, _stderr = client.exec_command('interface set [find comment="hotel"] disabled=no')
    bot.send_message(call.message.chat.id, 'OpenVPN –≤–∫–ª—é—á–µ–Ω')

#–û—á–∏—Å—Ç–∫–∞ –∞–¥—Ä–µ—Å –ª–∏—Å—Ç–æ–≤
#–û—á–∏—Å—Ç–∫–∞ –∞–¥—Ä–µ—Å –ª–∏—Å—Ç–∞ block1
@bot.callback_query_handler(func=lambda call: call.data =='clear_block') #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "clear_block":
        client.connect(hostname='10.100.2.1', port=6666, username="bka", password=passwd, look_for_keys=False,
                       allow_agent=False)
        _stdin, _stdout, _stderr = client.exec_command('ip firewall address-list remove [find where list="block1"]')
    bot.send_message(call.message.chat.id, 'Block1 –û—á–∏—â–µ–Ω')

#–û—á–∏—Å—Ç–∫–∞ –∞–¥—Ä–µ—Å –ª–∏—Å—Ç–æ–≤ rdp_bruteforce
@bot.callback_query_handler(func=lambda call: call.data =='clear_brute') #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "clear_brute":
        client.connect(hostname='10.100.2.1', port=6666, username="bka", password=passwd, look_for_keys=False,
                       allow_agent=False)
        _stdin, _stdout, _stderr = client.exec_command('ip firewall address-list remove [find where list~"^rdp_brute"]')
    bot.send_message(call.message.chat.id, 'Block1 –û—á–∏—â–µ–Ω')

#–ü–∏–Ω–≥ 1–° —Å–µ—Ä–≤–µ—Ä–∞

@bot.callback_query_handler(func=lambda call: call.data =='ping_sql') #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "ping_sql":
        response_list = ping('10.100.2.32', size=40, count=3)
        print(response_list.stats_packets_returned)
    bot.send_message(call.message.chat.id,"–ü–æ—Ç–µ—Ä—è–Ω–æ –ø–∞–∫–µ—Ç–æ–≤")
    bot.send_message(call.message.chat.id, response_list.packet_loss)

#–ü–∏–Ω–≥ –¢–µ—Ä–º–∏–Ω–∞–ª–∞

@bot.callback_query_handler(func=lambda call: call.data =='ping_term') #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "ping_term":
        response_list = ping('10.100.2.145', size=40, count=3)
        print(response_list)
    bot.send_message(call.message.chat.id, "–ü–æ—Ç–µ—Ä—è–Ω–æ –ø–∞–∫–µ—Ç–æ–≤")
    bot.send_message(call.message.chat.id, response_list.packet_loss)

#–ü–∏–Ω–≥  —Ö–æ—Å—Ç–∞ 1–°

@bot.callback_query_handler(func=lambda call: call.data =='ping_host_sql') #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "ping_host_sql":
        response_list = ping('10.100.2.31', size=40, count=3)
        print(response_list)
    bot.send_message(call.message.chat.id, "–ü–æ—Ç–µ—Ä—è–Ω–æ –ø–∞–∫–µ—Ç–æ–≤")
    bot.send_message(call.message.chat.id, response_list.packet_loss)

#–ü–∏–Ω–≥ –æ–±—â–µ–≥–æ —Ö–æ—Å—Ç–∞

@bot.callback_query_handler(func=lambda call: call.data =='ping_host_all') #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "ping_host_all":
        response_list = ping('10.100.2.43', size=40, count=3)
        print(response_list)
    bot.send_message(call.message.chat.id, "–ü–æ—Ç–µ—Ä—è–Ω–æ –ø–∞–∫–µ—Ç–æ–≤")
    bot.send_message(call.message.chat.id, response_list.packet_loss)

#–ü–∏–Ω–≥ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤

@bot.callback_query_handler(func=lambda call: call.data =='ping_all') #–ü–ê–†–û–õ–¨!!!!
def spisok_del(call):
    if call.data == "ping_all":
        response_list_1 = ping('10.100.2.32', size=40, count=4)
        bot.send_message(call.message.chat.id, "–ü–æ—Ç–µ—Ä—è–Ω–æ –ø–∞–∫–µ—Ç–æ–≤ —Å–µ—Ä–≤–µ—Ä 1—Å - {}".format(response_list_1.stats_packets_lost))
        response_list_2 = ping('10.100.2.145', size=40, count=4)
        bot.send_message(call.message.chat.id, "–ü–æ—Ç–µ—Ä—è–Ω–æ –ø–∞–∫–µ—Ç–æ–≤ —Å–µ—Ä–≤–µ—Ä –¢–µ—Ä–º–∏–Ω–∞–ª–æ–≤ - {}".format(response_list_2.stats_packets_lost))
        response_list_3 = ping('10.100.2.31', size=40, count=4)
        bot.send_message(call.message.chat.id, "–ü–æ—Ç–µ—Ä—è–Ω–æ –ø–∞–∫–µ—Ç–æ–≤ —Å–µ—Ä–≤–µ—Ä –•–æ—Å—Ç 1—Å -{}".format(response_list_3.stats_packets_lost))
        response_list_4 = ping('10.100.2.43', size=40, count=4)
        bot.send_message(call.message.chat.id, "–ü–æ—Ç–µ—Ä—è–Ω–æ –ø–∞–∫–µ—Ç–æ–≤ –æ–±—â–∏–π —Ö–æ—Å—Ç - {}".format(response_list_4.stats_packets_lost))
        response_list_5 = ping('8.8.8.8', size=40, count=4)
        bot.send_message(call.message.chat.id,"–ü–∏–Ω–≥ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, –ø–æ—Ç–µ—Ä—å - {}".format(response_list_5.stats_packets_lost))



bot.polling(none_stop=True) # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è